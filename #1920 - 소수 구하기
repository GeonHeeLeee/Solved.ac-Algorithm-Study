import math
n, m = map(int, input().split())
l = [True for i in range(m+1)]

for i in range(2, int(math.sqrt(m))+1):
    if(l[i] == True):
        j = 2
        while(i*j <= m):
            l[i*j] = False
            j = j + 1

for i in range(n,m+1):
    if l[i]:
        if i != 1:
            print(i)
'''
만약 n까지의 소수를 구하고 싶다면 제곱의 대칭성을 이용하자.
어떤 두 수를 곱해서 n이 되는 수는 math.sqrt(n)을 기준으로 대칭성을 갖는다

만약 100이라 가정할 시,
1 100
2 50
4 25
5 20
10 10
1 2 4 5 | 10 10 | 20 25 50 100

와 같이 대칭성을 갖는다.

따라서 int(math.sqrt(n))+1을 통해 제곱근 이전까지의 수의 배수들을 모두 지우면 된다.

처음 [True for i in range(m+1)]로 모든 수를 True로 설정한 다음
2부터 제곱근의 수까지의 배수를 False로 설정한다.

여기서 중요한 것은 처음 배열을 선언할때 모든 수를 True로 선언하는 것이다.
'''
