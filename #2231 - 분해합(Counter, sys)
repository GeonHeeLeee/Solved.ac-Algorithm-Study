import sys
from collections import Counter
n = int(sys.stdin.readline())
numList = []
for i in range(n):
    numList.append(int(sys.stdin.readline()))

#합계 구하기
print(round(sum(numList)/n))

#중앙 값 구하기
numList.sort()
print(numList[n//2])

#최빈값 구하기
modeList = Counter(numList).most_common(2)
if(len(modeList) > 1):
    if(modeList[0][1] == modeList[1][1]):
        mode = modeList[1][0]
    else:
        mode = modeList[0][0]
else:
    mode = modeList[0][0]
print(mode)

#범위
range = numList[n-1] - numList[0]
print(range)

'''
처음에는 Counter를 몰라서 for문을 이용해 최빈값을 구하려고 했다.
하지만 자료구조 시간에 배운 시간복잡도를 고려하지 못해 자꾸만 시간초과가 발생했다.

이 문제에서 배운 것은 두가지이다.
첫번째는 sys.stdin.readline(),
두번째는 Counter이다.

백준 같은 문제를 풀 때는 input보단 sys.stdin.readline()이 시간을 절약 할 수 있다는 것을 알았고
Counter를 사용해 최빈값 같은 문제를 간단하게 풀 수 있다는 것을 알았다.

from collections import Counter 로 import 한 다음,
문자열, 배열 등을 인자로 넘긴다. Ex) myList = Counter(list)
반환 값은 딕셔너리로 나오는데 key 값에는 원래 배열에 있던 문자가, value 값에는 해당 값의 count함수를 적용한 값이 나온다.
또한 most_common함수는 아무 인자를 주지 않을 시, 발생한 순서(value)값 순으로 정렬해 딕셔너리로 반환한다.
만약 most_common(k)로 할 시, 가장 많이 발생한 순서로 내림차순으로 k개 만큼을 반환한다.
'''
